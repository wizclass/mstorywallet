---
kind: pipeline
name: check preconditions (node:lts)

platform:
  os: linux
  arch: amd64

steps:
- name: build information
  image: node:lts
  commands:
  - node --version
  - npm --version
  - yarn --version
  - git --version

- name: install
  image: node:lts
  commands:
  - "git fetch origin +refs/heads/$DRONE_REPO_BRANCH:$DRONE_REPO_BRANCH || true"
  - yarn install

- name: audit
  image: node:lts
  commands:
  - yarn run audit

- name: lint
  image: node:lts
  commands:
  - yarn run lint

- name: check-fmt
  image: node:lts
  commands:
  - yarn run check-fmt

---
kind: pipeline
name: size and timing (node:lts)

platform:
  os: linux
  arch: amd64

steps:
- name: slow-deps
  image: node:lts
  commands:
  - npm install -g slow-deps
  - slow-deps

trigger:
  branch:
  - master
  - "rel/*"
  - prod/production

---
kind: pipeline
name: unit tests (node:6)

platform:
  os: linux
  arch: amd64

steps:
- name: build information
  image: node:6
  commands:
  - node --version
  - npm --version
  - yarn --version
  - git --version

- name: install
  image: node:6
  commands:
  - "git fetch origin +refs/heads/$DRONE_REPO_BRANCH:$DRONE_REPO_BRANCH || true"
  - yarn install --ignore-engines

- name: unit-test-changed
  image: node:6
  commands:
  - yarn run unit-test-changed
  environment:
    BITGOJS_TEST_PASSWORD:
      from_secret: password

- name: upload reports
  image: node:6
  commands:
  - yarn add -s -W --ignore-engines --no-lockfile --ignore-scripts codecov aws-sdk
  - yarn run artifacts
  - yarn run gen-coverage-changed
  - yarn run coverage -F unit
  environment:
    CODECOV_TOKEN:
      from_secret: codecov
    reports_s3_akid:
      from_secret: reports_s3_akid
    reports_s3_sak:
      from_secret: reports_s3_sak
  when:
    status:
    - success
    - failure

trigger:
  branch:
    exclude:
    - master
    - "rel/*"
    - prod/production

---
kind: pipeline
name: unit tests (node:8)

platform:
  os: linux
  arch: amd64

steps:
- name: build information
  image: node:8
  commands:
  - node --version
  - npm --version
  - yarn --version
  - git --version

- name: install
  image: node:8
  commands:
  - "git fetch origin +refs/heads/$DRONE_REPO_BRANCH:$DRONE_REPO_BRANCH || true"
  - yarn install

- name: unit-test-changed
  image: node:8
  commands:
  - yarn run unit-test-changed
  environment:
    BITGOJS_TEST_PASSWORD:
      from_secret: password

- name: upload reports
  image: node:8
  commands:
  - yarn add -s -W --ignore-engines --no-lockfile --ignore-scripts codecov aws-sdk
  - yarn run artifacts
  - yarn run gen-coverage-changed
  - yarn run coverage -F unit
  environment:
    CODECOV_TOKEN:
      from_secret: codecov
    reports_s3_akid:
      from_secret: reports_s3_akid
    reports_s3_sak:
      from_secret: reports_s3_sak
  when:
    status:
    - success
    - failure

trigger:
  branch:
    exclude:
    - master
    - "rel/*"
    - prod/production

---
kind: pipeline
name: unit tests (node:10)

platform:
  os: linux
  arch: amd64

steps:
- name: build information
  image: node:10
  commands:
  - node --version
  - npm --version
  - yarn --version
  - git --version

- name: install
  image: node:10
  commands:
  - "git fetch origin +refs/heads/$DRONE_REPO_BRANCH:$DRONE_REPO_BRANCH || true"
  - yarn install

- name: unit-test-changed
  image: node:10
  commands:
  - yarn run unit-test-changed
  environment:
    BITGOJS_TEST_PASSWORD:
      from_secret: password

- name: upload reports
  image: node:10
  commands:
  - yarn add -s -W --ignore-engines --no-lockfile --ignore-scripts codecov aws-sdk
  - yarn run artifacts
  - yarn run gen-coverage-changed
  - yarn run coverage -F unit
  environment:
    CODECOV_TOKEN:
      from_secret: codecov
    reports_s3_akid:
      from_secret: reports_s3_akid
    reports_s3_sak:
      from_secret: reports_s3_sak
  when:
    status:
    - success
    - failure

trigger:
  branch:
    exclude:
    - master
    - "rel/*"
    - prod/production

---
kind: pipeline
name: unit tests (node:11)

platform:
  os: linux
  arch: amd64

steps:
- name: build information
  image: node:11
  commands:
  - node --version
  - npm --version
  - yarn --version
  - git --version

- name: install
  image: node:11
  commands:
  - "git fetch origin +refs/heads/$DRONE_REPO_BRANCH:$DRONE_REPO_BRANCH || true"
  - yarn install

- name: unit-test-changed
  image: node:11
  commands:
  - yarn run unit-test-changed
  environment:
    BITGOJS_TEST_PASSWORD:
      from_secret: password

- name: upload reports
  image: node:11
  commands:
  - yarn add -s -W --ignore-engines --no-lockfile --ignore-scripts codecov aws-sdk
  - yarn run artifacts
  - yarn run gen-coverage-changed
  - yarn run coverage -F unit
  environment:
    CODECOV_TOKEN:
      from_secret: codecov
    reports_s3_akid:
      from_secret: reports_s3_akid
    reports_s3_sak:
      from_secret: reports_s3_sak
  when:
    status:
    - success
    - failure

trigger:
  branch:
    exclude:
    - master
    - "rel/*"
    - prod/production

---
kind: pipeline
name: integration tests (node:lts)

platform:
  os: linux
  arch: amd64

steps:
- name: build information
  image: node:lts
  commands:
  - node --version
  - npm --version
  - yarn --version
  - git --version

- name: install
  image: node:lts
  commands:
  - "git fetch origin +refs/heads/$DRONE_REPO_BRANCH:$DRONE_REPO_BRANCH || true"
  - yarn install

- name: integration-test
  image: node:lts
  commands:
  - yarn run integration-test
  environment:
    BITGOJS_TEST_PASSWORD:
      from_secret: password

- name: upload reports
  image: node:lts
  commands:
  - yarn add -s -W --ignore-engines --no-lockfile --ignore-scripts codecov aws-sdk
  - yarn run artifacts
  - yarn run gen-coverage
  - yarn run coverage -F integration
  environment:
    CODECOV_TOKEN:
      from_secret: codecov
    reports_s3_akid:
      from_secret: reports_s3_akid
    reports_s3_sak:
      from_secret: reports_s3_sak
  when:
    status:
    - success
    - failure

trigger:
  branch:
  - master
  - "rel/*"
  - prod/production

...
